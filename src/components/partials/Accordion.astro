---
const {
    className = '',
    openInitially = false
} = Astro.props;

const initialHeight = openInitially ? '' : 'max-h-0 lg:max-h-1/1';

const generateRandomString = () => {
    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
    let result = '';
    for (let i = 0; i < 9; i++) {
        const randomIndex = Math.floor(Math.random() * chars.length);
        result += chars[randomIndex];
    }
    return `accordion-id-${result}`;
}

const randomId = generateRandomString();
---

<div data-accordion data-accordion-initially-open={openInitially} class=`accordion lg:w-auto lg:h-544 lg:flex ${className}`>

    <button data-accordion-button aria-controls={randomId} class="w-full py-20 cursor-pointer text-center text-30 leading-30 lg:h-full lg:relative lg:h-544 lg:w-98">
        <span class="lg:block lg:-rotate-90 lg:w-544 lg:h-98 lg:leading-98 lg:whitespace-nowrap lg:absolute lg:bottom-0 lg:left-0 lg:origin-bottom-left lg:translate-x-98"><slot name="title"></slot></span>

        <span data-accordion-icon class=`hidden transition-transform`></span>
    </button>

    <div data-accordion-content id={randomId} class=`${initialHeight} w-full lg:w-auto overflow-hidden transition-all ease-in-out`>
        <div class="pb-5 border-t lg:border-t-0 lg:border-l-1 lg:h-1/1 lg:w-812">
            <slot/>
        </div>
    </div>
</div>

<script>
    import { lazyLoadWhenIdle } from '@scripts/utils/lazy-load-when-idle';
    lazyLoadWhenIdle('../partials/accordion', {
        selector: '*[data-accordion]',
        onLoad: ({ accordion }) => accordion.init(),
    });
</script>
